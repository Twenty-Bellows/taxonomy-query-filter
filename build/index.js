(()=>{"use strict";var e={n:t=>{var o=t&&t.__esModule?()=>t.default:()=>t;return e.d(o,{a:o}),o},d:(t,o)=>{for(var n in o)e.o(o,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:o[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const t=window.wp.blocks,o=window.wp.blockEditor,n=window.wp.components,r=window.wp.element,a=window.wp.apiFetch;var i=e.n(a);const l=window.ReactJSXRuntime,s=JSON.parse('{"UU":"twentybellows/taxonomy-query-filter"}');(0,t.registerBlockType)(s.UU,{edit:function({context:e,attributes:t,setAttributes:a}){const s=e.query.postType,[c,u]=(0,r.useState)([]),{taxonomy:p}=t;(0,r.useEffect)((()=>{i()({path:`/wp/v2/taxonomies?type=${s}`}).then((e=>{const t=Object.values(e).map((e=>({label:e.name,value:e.slug})));u(t)})).catch((e=>{console.error("Error fetching taxonomies:",e)}))}),[]);const d=e=>{a({taxonomy:e})};return(0,l.jsxs)("div",{...(0,o.useBlockProps)(),children:[(0,l.jsx)(n.SelectControl,{__next40pxDefaultSize:!0,__nextHasNoMarginBottom:!0,value:p,options:c,onChange:e=>d(e)}),(0,l.jsx)(o.InspectorControls,{children:(0,l.jsx)(n.PanelBody,{title:"Taxonomy to Filter",children:(0,l.jsx)(n.SelectControl,{__next40pxDefaultSize:!0,__nextHasNoMarginBottom:!0,label:"Select Taxonomy",value:p,options:c,onChange:e=>d(e)})})})]})}}),(0,t.registerBlockVariation)("twentybellows/taxonomy-query-filter",{name:"taxonomy-query-filter-radio",title:"Taxonomy Query Filter - Radio",description:"Query filter using radio as the input",isDefault:!1,attributes:{element:"radio"},isActive:(e,t)=>e.element===t.element})})();