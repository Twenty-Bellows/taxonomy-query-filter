{"version":3,"file":"index.js","mappings":"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","sources":["webpack://query-filter/./src/edit.js","webpack://query-filter/./src/index.js","webpack://query-filter/./src/style.scss","webpack://query-filter/external window \"ReactJSXRuntime\"","webpack://query-filter/external window [\"wp\",\"apiFetch\"]","webpack://query-filter/external window [\"wp\",\"blockEditor\"]","webpack://query-filter/external window [\"wp\",\"blocks\"]","webpack://query-filter/external window [\"wp\",\"components\"]","webpack://query-filter/external window [\"wp\",\"element\"]","webpack://query-filter/webpack/bootstrap","webpack://query-filter/webpack/runtime/chunk loaded","webpack://query-filter/webpack/runtime/compat get default export","webpack://query-filter/webpack/runtime/define property getters","webpack://query-filter/webpack/runtime/hasOwnProperty shorthand","webpack://query-filter/webpack/runtime/make namespace object","webpack://query-filter/webpack/runtime/jsonp chunk loading","webpack://query-filter/webpack/before-startup","webpack://query-filter/webpack/startup","webpack://query-filter/webpack/after-startup"],"sourcesContent":["import { InspectorControls } from '@wordpress/block-editor';\nimport { PanelBody, SelectControl } from '@wordpress/components';\nimport { useEffect, useState } from '@wordpress/element';\nimport apiFetch from '@wordpress/api-fetch';\n\nexport default function Edit({ context, attributes, setAttributes }) {\n\n\tconst postType = context.query.postType;\n\tconst [taxonomies, setTaxonomies] = useState([]);\n\tconst { taxonomy } = attributes;\n\n\tuseEffect(() => {\n\t\tapiFetch({ path: `/wp/v2/taxonomies?type=${postType}` })\n\t\t\t.then((taxonomies) => {\n\t\t\t\tconst taxonomyOptions = Object.values(taxonomies).map((taxonomy) => ({\n\t\t\t\t\tlabel: taxonomy.name,\n\t\t\t\t\tvalue: taxonomy.slug,\n\t\t\t\t}));\n\t\t\t\tsetTaxonomies(taxonomyOptions);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error('Error fetching taxonomies:', error);\n\t\t\t});\n\t}, []);\n\n\tconst handleTaxonomyChange = (selectedTaxonomy) => {\n\t\tsetAttributes({ taxonomy: selectedTaxonomy });\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<SelectControl\n\t\t\t\tvalue={taxonomy}\n\t\t\t\toptions={taxonomies}\n\t\t\t\tonChange={(taxonomy) => handleTaxonomyChange(taxonomy)}\n\t\t\t/>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={'Taxonomy to Filter'}>\n\t\t\t\t\t<SelectControl\n\t\t\t\t\t\tlabel=\"Select Taxonomy\"\n\t\t\t\t\t\tvalue={taxonomy}\n\t\t\t\t\t\toptions={taxonomies}\n\t\t\t\t\t\tonChange={(taxonomy) => handleTaxonomyChange(taxonomy)}\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t</>\n\n\t);\n}\n","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nimport { registerBlockType, registerBlockVariation } from '@wordpress/blocks';\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport './style.scss';\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport metadata from './block.json';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType( metadata.name, {\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n} );\n\nregisterBlockVariation(\"twentybellows/query-filter\",{\n\tname: 'query-filter-radio',\n\ttitle: 'Query Filter - Radio',\n\tdescription: 'Query filter using radio as the input',\n\tisDefault: false,\n\tattributes: {\n\t\telement: 'radio'\n\t},\n\tisActive: (blockAttributes, variationAttributes) => blockAttributes.element === variationAttributes.element\n})","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"index\": 0,\n\t\"./style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkquery_filter\"] = self[\"webpackChunkquery_filter\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"./style-index\"], () => (__webpack_require__(\"./src/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["InspectorControls","PanelBody","SelectControl","useEffect","useState","apiFetch","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Edit","context","attributes","setAttributes","postType","query","taxonomies","setTaxonomies","taxonomy","path","then","taxonomyOptions","Object","values","map","label","name","value","slug","catch","error","console","handleTaxonomyChange","selectedTaxonomy","children","options","onChange","title","registerBlockType","registerBlockVariation","metadata","edit","description","isDefault","element","isActive","blockAttributes","variationAttributes"],"sourceRoot":""}